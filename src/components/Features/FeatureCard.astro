---
interface Props {
  icon: string;
  title: string;
  description: string;
}

const { icon, title, description } = Astro.props;
---

<div class="feature-card">
  <div class="icon-wrapper">
    <span class="icon" set:html={icon}></span>
  </div>
  <h3>{title}</h3>
  <p>{description}</p>
  <div class="card-glow"></div>
</div>

<style>
  .feature-card {
    position: relative;
    background: rgba(var(--card-bg), 0.5);
    padding: 2rem;
    border-radius: 1rem;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(var(--text), 0.1);
    transition: all 0.3s ease;
    overflow: hidden;
  }

  .icon-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 64px;
    height: 64px;
    margin-bottom: 1.5rem;
    background: rgba(var(--primary), 0.1);
    border-radius: 16px;
    transition: all 0.3s ease;
  }

  .icon {
    width: 32px;
    height: 32px;
    color: rgb(var(--primary));
  }

  h3 {
    font-size: 1.25rem;
    margin-bottom: 1rem;
    color: rgb(var(--text));
  }

  p {
    color: rgba(var(--text), 0.8);
    line-height: 1.6;
  }

  .card-glow {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: radial-gradient(
      600px circle at var(--mouse-x, 0) var(--mouse-y, 0),
      rgba(var(--primary), 0.1),
      transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
  }

  .feature-card:hover {
    transform: translateY(-5px);
    border-color: rgba(var(--primary), 0.3);
  }

  .feature-card:hover .icon-wrapper {
    background: rgba(var(--primary), 0.2);
  }

  .feature-card:hover .card-glow {
    opacity: 1;
  }
</style>