---
---
<div class="animated-background">
  <div class="tech-grid"></div>
  <div class="floating-elements">
    <div class="code-block">
      <pre><code>{`function init() {
  const data = [];
  return data;
}`}</code></pre>
    </div>
    <div class="circuit-paths">
      <svg viewBox="0 0 100 100" class="circuit">
        <path d="M10,50 Q30,30 50,50 T90,50" class="path"/>
        <circle cx="10" cy="50" r="2" class="node"/>
        <circle cx="50" cy="50" r="2" class="node"/>
        <circle cx="90" cy="50" r="2" class="node"/>
      </svg>
    </div>
    <div class="data-stream">
      <div class="binary">01001010</div>
      <div class="binary">11100101</div>
      <div class="binary">00110011</div>
    </div>
  </div>
  <div class="gradient-overlay"></div>
</div>

<style>
  .animated-background {
    position: absolute;
    inset: 0;
    overflow: hidden;
    z-index: 0;
  }

  .tech-grid {
    position: absolute;
    inset: -100%;
    background-image: 
      linear-gradient(rgba(var(--primary), 0.1) 1px, transparent 1px),
      linear-gradient(90deg, rgba(var(--primary), 0.1) 1px, transparent 1px);
    background-size: 50px 50px;
    transform: perspective(1000px) rotateX(60deg);
    animation: grid 20s linear infinite;
  }

  .floating-elements {
    position: absolute;
    inset: 0;
    pointer-events: none;
  }

  .code-block {
    position: absolute;
    top: 20%;
    left: 10%;
    padding: 1rem;
    background: rgba(var(--card-bg), 0.1);
    border-radius: 8px;
    font-family: monospace;
    color: rgba(var(--primary), 0.6);
    font-size: 0.8rem;
    animation: float 10s ease-in-out infinite;
    backdrop-filter: blur(4px);
  }

  .circuit-paths {
    position: absolute;
    top: 30%;
    right: 15%;
    width: 200px;
    height: 200px;
    animation: float 15s ease-in-out infinite reverse;
  }

  .circuit {
    width: 100%;
    height: 100%;
  }

  .path {
    fill: none;
    stroke: rgba(var(--primary), 0.3);
    stroke-width: 1;
    stroke-dasharray: 100;
    stroke-dashoffset: 100;
    animation: drawPath 3s linear infinite;
  }

  .node {
    fill: rgb(var(--primary));
    animation: pulse 2s ease-in-out infinite;
  }

  .data-stream {
    position: absolute;
    bottom: 25%;
    left: 20%;
    animation: float 12s ease-in-out infinite;
  }

  .binary {
    font-family: monospace;
    color: rgba(var(--primary), 0.4);
    font-size: 0.9rem;
    margin: 0.5rem 0;
    animation: fadeInOut 4s linear infinite;
  }

  .binary:nth-child(2) {
    animation-delay: 1s;
  }

  .binary:nth-child(3) {
    animation-delay: 2s;
  }

  .gradient-overlay {
    position: absolute;
    inset: 0;
    background: radial-gradient(
      circle at 50% 50%,
      transparent 0%,
      rgb(var(--background)) 70%
    );
  }

  @keyframes grid {
    0% { transform: perspective(1000px) rotateX(60deg) translateY(0); }
    100% { transform: perspective(1000px) rotateX(60deg) translateY(50px); }
  }

  @keyframes float {
    0%, 100% { transform: translate(0, 0) rotate(0deg); }
    50% { transform: translate(20px, -20px) rotate(5deg); }
  }

  @keyframes drawPath {
    0% { stroke-dashoffset: 100; }
    50% { stroke-dashoffset: 0; }
    100% { stroke-dashoffset: -100; }
  }

  @keyframes pulse {
    0%, 100% { opacity: 1; transform: scale(1); }
    50% { opacity: 0.5; transform: scale(1.2); }
  }

  @keyframes fadeInOut {
    0%, 100% { opacity: 0; transform: translateY(10px); }
    50% { opacity: 1; transform: translateY(0); }
  }
</style>