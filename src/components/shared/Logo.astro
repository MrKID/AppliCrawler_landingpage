---
interface Props {
  size?: number;
  class?: string;
}

const { size = 32, class: className = '' } = Astro.props;
---

<div class={`logo ${className}`} style={`width: ${size}px; height: ${size}px;`}>
  <svg width="100%" height="100%" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M16 2L2 8l14 6 14-6-14-6z" fill="url(#gradient1)"/>
    <path d="M2 16l14 6 14-6" fill="url(#gradient2)"/>
    <path d="M2 24l14 6 14-6" fill="url(#gradient3)"/>
    <defs>
      <linearGradient id="gradient1" x1="2" y1="8" x2="30" y2="8" gradientUnits="userSpaceOnUse">
        <stop offset="0" stop-color="rgb(var(--primary))"/>
        <stop offset="1" stop-color="rgb(var(--secondary))"/>
      </linearGradient>
      <linearGradient id="gradient2" x1="2" y1="19" x2="30" y2="19" gradientUnits="userSpaceOnUse">
        <stop offset="0" stop-color="rgb(var(--secondary))"/>
        <stop offset="1" stop-color="rgb(var(--accent))"/>
      </linearGradient>
      <linearGradient id="gradient3" x1="2" y1="27" x2="30" y2="27" gradientUnits="userSpaceOnUse">
        <stop offset="0" stop-color="rgb(var(--accent))"/>
        <stop offset="1" stop-color="rgb(var(--primary))"/>
      </linearGradient>
    </defs>
  </svg>
</div>

<style>
  .logo {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
</style>